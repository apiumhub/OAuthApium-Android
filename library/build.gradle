apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: "de.mannodermaus.android-junit5"

android {
    compileSdkVersion 28

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    implementation "io.arrow-kt:arrow-core:0.7.3"
    implementation "io.mockk:mockk:1.8.6"
    implementation "com.squareup.retrofit2:converter-gson:2.4.0"

    testImplementation junit5.unitTests()
    testImplementation junit5.parameterized()
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    testImplementation 'junit:junit:4.12'
    testImplementation "org.amshove.kluent:kluent:1.14"
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}
repositories {
    mavenCentral()
}

allprojects {
    repositories {
        mavenCentral()
    }
    apply plugin: 'maven-publish'

    group 'com.apiumhub.library'
    version = externalVersion

    publishing {
        publications {
            library(MavenPublication) {
                groupId 'com.apiumhub.library'
                artifactId 'OAuthApium'
                version externalVersion
                artifact("$buildDir/outputs/aar/library-release.aar")
                pom.withXml {
                    def dependenciesNode = asNode().appendNode('dependencies')
                    //Iterate over the compile dependencies (we don't want the test ones), adding a <dependency> node for each
                    configurations.compile.allDependencies.each {
                        if (it.group != null && (it.name != null || "unspecified" == it.name) && it.version != null) {
                            def dependencyNode = dependenciesNode.appendNode('dependency')
                            dependencyNode.appendNode('groupId', it.group)
                            dependencyNode.appendNode('artifactId', it.name)
                            dependencyNode.appendNode('version', it.version)
                        }
                    }
                }
            }
        }
        repositories {
            maven {
                name 'NexusApiumSNAPSHOT'
                url snapshotsRepositoryUrl
                credentials {
                    username = deployRepoUsername
                    password = deployRepoPassword
                }
            }
            maven {
                name 'NexusApiumRELEASE'
                url releaseRepositoryUrl
                credentials {
                    username = deployRepoUsername
                    password = deployRepoPassword
                }
                maven {
                    url "https://maven.google.com"
                }

            }
            maven {
                name 'NexusApiumAndroid'
                url androidRepositoryUrl
                credentials {
                    username = deployRepoUsername
                    password = deployRepoPassword
                }
                maven {
                    url "https://maven.google.com"
                }
            }
        }
    }
}
